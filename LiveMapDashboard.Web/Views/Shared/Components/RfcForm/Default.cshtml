@using LiveMapDashboard.Web.Models.Modal
@model LiveMapDashboard.Web.Models.Rfc.RequestForChangeFormViewModel

@{
    Layout = "~/Views/Shared/Layouts/_GridDoubleLayout.cshtml";

    const string leaveChangesModalId = "modal-leave-changes";
    var leaveChangesModalModel = new LeaveChangesModalViewModel
    {
        ModalId = leaveChangesModalId,
        ModalTitle = "Leave changes",
        ModalMessage = "Are you sure you would like to abandon your changes?",
    };

    var deleteModalId = $"delete-poi-{Model.CrudformViewModel.Id?.Replace(' ', '-').ToLower() ?? "modal"}";
    var deleteModalModel = !string.IsNullOrEmpty(Model.CrudformViewModel.Id) ? new DeleteModalViewModel
    {
        ModalId = deleteModalId,
        ModalTitle = $"Delete Request for change: {Model.CrudformViewModel.Title}",
        WarningMessage = "This action is not reversible, so please continue with caution.",
        FormController = "Rfc",
        FormAction = "Delete",
        HiddenInputs = new Dictionary<string, string>
        {
            { "Id", Model.CrudformViewModel.Id },
            { "MapId", Model.CrudformViewModel.MapId },
        }
    } : null;
}

@section TopBarActions
{
    <div class="mb-5 pb-5 flex w-full justify-between items-center border-b border-gray-200 dark:border-neutral-700">
        <div class="flex items-center gap-x-4">
            @if (!string.IsNullOrEmpty(Model.Rfc.Id.ToString()))
            {
                <a asp-controller="Rfc" 
                   asp-action="Index" 
                   asp-route-mapId="@Model.CrudformViewModel.MapId"
                   class="py-2 px-3 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-transparent bg-blue-600 text-white hover:bg-blue-700 focus:outline-hidden focus:bg-blue-700 disabled:opacity-50 disabled:pointer-events-none">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-corner-down-left-icon lucide-corner-down-left shrink size-4"><path d="M20 4v7a4 4 0 0 1-4 4H4"/><path d="m9 10-5 5 5 5"/></svg>
                </a>
            }
            else
            {
                <button type="button" class="py-2 px-3 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-transparent bg-blue-600 text-white hover:bg-blue-700 focus:outline-hidden focus:bg-blue-700 disabled:opacity-50 disabled:pointer-events-none" aria-haspopup="dialog" aria-expanded="false" aria-controls="@leaveChangesModalId" data-hs-overlay="#@leaveChangesModalId">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-corner-down-left-icon lucide-corner-down-left shrink size-4"><path d="M20 4v7a4 4 0 0 1-4 4H4"/><path d="m9 10-5 5 5 5"/></svg>
                </button>
            }
            <h2 class="text-2xl font-semibold text-gray-800 dark:text-neutral-200">
                @if (!string.IsNullOrEmpty(Model.Rfc.Id.ToString()))
                {
                    <span>Review point of interest: @Model.CrudformViewModel.Title</span>
                }
                else
                {
                    <span>Create New Point of interest</span>
                }
            </h2>
        </div>

        @await Html.PartialAsync("~/Views/Shared/Components/RfcForm/_GoBackModal.cshtml", leaveChangesModalModel)
    </div>
}

@section GridLeftContent
{
    <div class="flex flex-col gap-4">
        @if (Model.Rfc.PoiId != null)
        {
            <div class="flex flex-col bg-white border border-gray-200 shadow-2xs rounded-xl dark:bg-neutral-900 dark:border-neutral-700 dark:shadow-neutral-700/70">
                <div class="p-4 md:p-5">
                    <h3 class="text-lg font-bold text-gray-800 dark:text-white">
                        Request for Change:
                    </h3>
                    <p class="mt-1 text-gray-500 dark:text-neutral-400">
                        @Model.Rfc.Message
                    </p>
                </div>
            </div>
        }
        <div class="card w-full z-10 bg-white border border-gray-200 dark:bg-neutral-900 dark:border-neutral-700 rounded-lg">
            <div class="card-body w-full h-full">
                <div id="map" class="h-[50vh] w-full rounded-lg"></div>
            </div>
        </div>
    </div>

}

@section GridRightContent
{
    <div>
        <form method="post" asp-controller="rfc" asp-action="rejectSubmit" id="reject_form">
            <input type="hidden" asp-for="Rfc.Id" />
            <input type="hidden" asp-for="CrudformViewModel.MapId" />
        </form>

        <form method="post" asp-controller="rfc" asp-action="approvalSubmit">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="ModelOnly" class="text-red-500 mb-4"></div>

            <input type="hidden" asp-for="Rfc.Id" />
            <input type="hidden" asp-for="Rfc.SuggestedPoiId" />
            <input type="hidden" asp-for="Rfc.PoiId" />

            <input type="hidden" asp-for="CrudformViewModel.Id" />
            <input type="hidden" asp-for="CrudformViewModel.MapId" />
            <input type="hidden" id="Coordinate_Latitude" asp-for="CrudformViewModel.Coordinate.Latitude" />
            <input type="hidden" id="Coordinate_Longitude" asp-for="CrudformViewModel.Coordinate.Longitude" />

            <div>
                <div class="mb-6 border border-blue-500 p-4 rounded-lg">
                    <div class="flex justify-between items-center">
                        <div>
                            <label class="text-sm font-medium text-gray-700 block mb-1 dark:text-gray-200">Locatie</label>
                            <p class="text-xs text-gray-500 dark:text-gray-400">*Click on the map to add a location</p>
                            <span asp-validation-for="CrudformViewModel.Coordinate" class="text-red-500 mb-4"></span>
                        </div>
                        <button type="button"
                                class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition duration-200"
                                id="applyLocationButton">
                            + Add location
                        </button>
                    </div>
                </div>
            
                <div class="mt-1 p-4 relative z-10 bg-white border border-gray-200 rounded-xl sm:mt-4 dark:bg-neutral-900 dark:border-neutral-700">
                    @Html.EditorFor(m => m.CrudformViewModel.Title, new ViewDataDictionary(ViewData) {
                        { "Placeholder", "Enter Title..." },
                        { "Label", "Title" }
                    })

                    @Html.EditorFor(m => m.CrudformViewModel.Category, "Dropdown", new ViewDataDictionary(ViewData) {
                        { "Options", Model.CrudformViewModel.Categories?.Select(c => c.CategoryName) },
                        { "Label", "Category" }
                    })

                    @Html.EditorFor(m => m.CrudformViewModel.Description, new ViewDataDictionary(ViewData) {
                        { "Placeholder", "Enter Description..." },
                        { "Label", "Description" },
                        { "IsMultiline", true }
                    })

                    @Html.EditorFor(m => m.CrudformViewModel.IsWheelchairAccessible, new ViewDataDictionary(ViewData) {
                        { "Label", "Wheelchair Accessible" }
                    })
                </div>

                <div class="mt-1 p-4 relative z-10 bg-white border border-gray-200 rounded-xl sm:mt-4 dark:bg-neutral-900 dark:border-neutral-700">
                    @Html.EditorFor(m => m.CrudformViewModel.Image, new ViewDataDictionary(ViewData) {
                        { "Label", "Image (URL)" },
                        { "Value", Model.CrudformViewModel.Image }
                    })

                    <div class="flex justify-center">
                        <div id="previewImageLoader" class="animate-spin size-6 border-3 border-current border-t-transparent text-blue-600 rounded-full dark:text-blue-500 hidden" role="status" aria-label="loading">
                            <span class="sr-only">Loading...</span>
                        </div>

                        <img id="previewImage" class="mt-2 w-full rounded-lg hidden" alt="POI main image"/>
                        <p id="imagePreviewError" class="text-sm text-yellow-800 mt-2 hidden">Image at URL does not exist.</p>
                    </div>
                </div>
            
                <div class="mt-1 p-4 relative z-10 bg-white border border-gray-200 rounded-xl sm:mt-4 dark:bg-neutral-900 dark:border-neutral-700">
                    <div>
                        <label class="block mb-2 text-sm font-medium dark:text-white">
                            Opening Hours
                        </label>

                        <div class="space-y-3">
                            @for (int i = 0; i < 7; i++)
                            {
                                var dayName = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetDayName((DayOfWeek)i);
                   
                                <div class="flex items-center gap-4">
                                    @Html.EditorFor(m => m.CrudformViewModel.OpeningHours[i].IsActive, new ViewDataDictionary(ViewData) {
                                        { "Label", @dayName }
                                    })

                                    @Html.EditorFor(m => m.CrudformViewModel.OpeningHours[i].Start, "Time", new ViewDataDictionary(ViewData) {
                                        { "Label", "" }
                                    })
                                    <span class="text-sm text-gray-500">to</span>
                                    @Html.EditorFor(m => m.CrudformViewModel.OpeningHours[i].End, "Time", new ViewDataDictionary(ViewData) {
                                        { "Label", "" }
                                    })
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="mt-2 py-4 relative z-10">
                <div class="flex justify-end gap-3 w-full">
                    <button type="button" id="btn_reject_rfc" class="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600">
                        Reject request
                    </button>

                    <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">
                        @if (Model.Rfc.PoiId != null)
                        {
                            <span>Approve request and save</span>
                        }
                        else
                        {
                            <span>Approve request and create</span>
                        }
                    </button>
                </div>
            </div>
        </form>
    </div>
    <script src="~/js/poi.js" asp-append-version="true" type="module"></script>
    <script src="~/js/rfc.js" asp-append-version="true" type="module"></script>
}