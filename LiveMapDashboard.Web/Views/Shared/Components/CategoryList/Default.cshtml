@model LiveMapDashboard.Web.Models.Category.CategoryListViewModel

@{
    Layout = "~/Views/Shared/Layouts/_DefaultLayout.cshtml";
}

@section TopBarActions
{
    <div class="py-4 flex justify-end">
        <a asp-controller="category" asp-action="form" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">
            New Category
        </a>
    </div>
}

@section Content
{
    <div class="flex flex-col">
        <div class="-m-1.5 overflow-x-auto">
            <div class="p-1.5 min-w-full inline-block align-middle">
                <div class="border border-gray-200 rounded-lg overflow-hidden dark:border-neutral-700">
                    <table class="min-w-full divide-y divide-gray-200 dark:divide-neutral-700">
                        <thead>
                        <tr>
                            <th scope="col"
                                class="px-6 py-3 text-start text-xs font-medium text-gray-500 uppercase dark:text-neutral-500">
                                Name
                            </th>
                            <th scope="col"
                                class="px-6 py-3 text-end text-xs font-medium text-gray-500 uppercase dark:text-neutral-500">
                                Action
                            </th>
                        </tr>
                        </thead>
                        <tbody class="divide-y divide-gray-200 dark:divide-neutral-700">
                        @foreach (
                        var category in Model.Categories)
                        {
                        <tr>
                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-800 dark:text-neutral-200">
                                @category.CategoryName
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-end text-sm font-medium">
                                <a asp-action="EditForm" asp-controller="category" asp-route-name="@category.CategoryName"
                                   class="inline-flex items-center gap-x-2 text-sm font-semibold rounded-lg border border-transparent text-blue-600 hover:text-blue-800 focus:outline-hidden focus:text-blue-800 disabled:opacity-50 disabled:pointer-events-none dark:text-blue-500 dark:hover:text-blue-400 dark:focus:text-blue-400">
                                    Edit
                                </a>

                                <button type="button" class="inline-flex items-center gap-x-2 pl-2 text-sm font-semibold rounded-lg border border-transparent text-red-600 hover:text-red-800 focus:outline-hidden focus:text-red-800 disabled:opacity-50 disabled:pointer-events-none dark:text-red-500 dark:hover:text-red-400 dark:focus:text-red-400" aria-haspopup="dialog" aria-expanded="false" aria-controls="delete-alert-@category.CategoryName" data-hs-overlay="#delete-alert-@category.CategoryName">
                                    Delete
                                </button>
                            </td>
                        </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    @foreach (var category in Model.Categories)
    {
        var deleteModalModel = new DeleteModalViewModel
        {
            ModalId = $"delete-category-{category.CategoryName.Replace(' ', '-').ToLower()}",
            ModalTitle = $"Delete Category: {category.CategoryName}",
            WarningMessage = "This action is not reversible, so please continue with caution.",
            DangerMessage = category.InUse == true
                ? "This category is in use by other points of interest. Removing it will update related points of interest to have the default category of 'empty'."
                : null,
            FormController = "Category",
            FormAction = "Delete",
            HiddenInputs = new Dictionary<string, string>
            {
                { "CategoryName", category.CategoryName },
                { "NewValue", category.CategoryName }
            }
        };  

        @await Html.PartialAsync("Components/CategoryList/_DeleteModal", deleteModalModel)
    }
}
