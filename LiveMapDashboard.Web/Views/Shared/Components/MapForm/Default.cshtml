@using LiveMapDashboard.Web.Models.Modal
@model LiveMapDashboard.Web.Models.Map.MapCrudformViewModel

@{
    Layout = "~/Views/Shared/Layouts/_TabHorizontalLayout.cshtml";

    const string leaveChangesModalId = "modal-leave-changes";
    var leaveChangesModalModel = new LeaveChangesModalViewModel
    {
        ModalId = leaveChangesModalId,
        ModalTitle = "Leave changes",
        ModalMessage = "Are you sure you would like to abandon your changes?",
    };

    var deleteModalId = $"delete-map-{Model.Id?.Replace(' ', '-').ToLower() ?? "modal"}";
    var deleteModalModel = (!string.IsNullOrEmpty(Model.Id) && Model.Id != Guid.Empty.ToString() && Model.Id != "00000000-0000-0000-0000-000000000000") ? new DeleteModalViewModel
    {
        ModalId = deleteModalId,
        ModalTitle = $"Delete Map: {Model.Name}",
        FormController = "Map",
        FormAction = "Delete",
        DangerMessage = "WARNING: Permanently remove the map and all of its contents, including: points of interest and requests for change. This action is irreversible. Are you sure you want to continue?",
        HiddenInputs = new Dictionary<string, string>
        {
            { "Id", Model.Id }
        }
    } : null;
}

@section TopBarActions
{
    <div class="mb-5 pb-5 flex w-full justify-between items-center border-b border-gray-200 dark:border-neutral-700">
        <div class="flex items-center gap-x-4">
            @if (!string.IsNullOrEmpty(Model.Id))
            {
                <a asp-controller="Map" asp-action="Index" class="py-2 px-3 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-transparent bg-blue-600 text-white hover:bg-blue-700 focus:outline-hidden focus:bg-blue-700 disabled:opacity-50 disabled:pointer-events-none">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-corner-down-left-icon lucide-corner-down-left shrink size-4"><path d="M20 4v7a4 4 0 0 1-4 4H4"/><path d="m9 10-5 5 5 5"/></svg>
                </a>
            }
            else
            {
                <button type="button" class="py-2 px-3 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-transparent bg-blue-600 text-white hover:bg-blue-700 focus:outline-hidden focus:bg-blue-700 disabled:opacity-50 disabled:pointer-events-none" aria-haspopup="dialog" aria-expanded="false" aria-controls="@leaveChangesModalId" data-hs-overlay="#@leaveChangesModalId">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-corner-down-left-icon lucide-corner-down-left shrink size-4"><path d="M20 4v7a4 4 0 0 1-4 4H4"/><path d="m9 10-5 5 5 5"/></svg>
                </button>
            }
            <h2 class="text-2xl font-semibold text-gray-800 dark:text-neutral-200">
                @if (!string.IsNullOrEmpty(Model.Id) && Model.Id != Guid.Empty.ToString() && Model.Id != "00000000-0000-0000-0000-000000000000")
                {
                    <span>Edit Map: @Model.Name</span>
                }
                else
                {
                    <span>Create New Map</span>
                }
            </h2>
        </div>
        
        @await Html.PartialAsync("~/Views/Shared/Components/MapForm/_GoBackModal.cshtml", leaveChangesModalModel)
        
        <div class="inline-flex gap-x-2">
            @if (deleteModalModel != null)
            {
                <div class="text-center">
                    <button type="button" class="py-2 px-3 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-transparent bg-red-600 text-white hover:bg-red-700 focus:outline-hidden focus:bg-red-700 disabled:opacity-50 disabled:pointer-events-none" aria-haspopup="dialog" aria-expanded="false" aria-controls="@deleteModalId" data-hs-overlay="#@deleteModalId">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-trash2-icon lucide-trash-2 shrink size-4"><path d="M3 6h18"/><path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"/><path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"/><line x1="10" x2="10" y1="11" y2="17"/><line x1="14" x2="14" y1="11" y2="17"/></svg>
                        Delete
                    </button>
                </div>

                @await Html.PartialAsync("~/Views/Shared/Components/MapForm/_DeleteModal.cshtml", deleteModalModel)
            }
        </div>
    </div>
}

@section VerticalTabButtons
{
    <button type="button" class="hs-tab-active:font-semibold hs-tab-active:border-blue-600 hs-tab-active:text-blue-600 py-4 px-1 inline-flex items-center gap-x-2 border-b-2 border-transparent text-sm whitespace-nowrap text-gray-500 hover:text-blue-600 focus:outline-hidden focus:text-blue-600 disabled:opacity-50 disabled:pointer-events-none dark:text-neutral-400 dark:hover:text-blue-500 active" id="tab-with-map-details-item" aria-selected="true" data-hs-tab="#tab-with-map-details" aria-controls="tab-with-map-details" role="tab">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-text-icon lucide-text shrink size-4"><path d="M15 18H3"/><path d="M17 6H3"/><path d="M21 12H3"/></svg>
        Details
    </button>
    <button type="button" class="hs-tab-active:font-semibold hs-tab-active:border-blue-600 hs-tab-active:text-blue-600 py-4 px-1 inline-flex items-center gap-x-2 border-b-2 border-transparent text-sm whitespace-nowrap text-gray-500 hover:text-blue-600 focus:outline-hidden focus:text-blue-600 disabled:opacity-50 disabled:pointer-events-none dark:text-neutral-400 dark:hover:text-blue-500" id="tab-with-map-background-item" aria-selected="false" data-hs-tab="#tab-with-map-background" aria-controls="tab-with-map-background" role="tab">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-map-icon lucide-map shrink size-4"><path d="M14.106 5.553a2 2 0 0 0 1.788 0l3.659-1.83A1 1 0 0 1 21 4.619v12.764a1 1 0 0 1-.553.894l-4.553 2.277a2 2 0 0 1-1.788 0l-4.212-2.106a2 2 0 0 0-1.788 0l-3.659 1.83A1 1 0 0 1 3 19.381V6.618a1 1 0 0 1 .553-.894l4.553-2.277a2 2 0 0 1 1.788 0z"/><path d="M15 5.764v15"/><path d="M9 3.236v15"/></svg>
        Background
    </button>
}

@section VerticalTabContent
{
    <div id="tab-with-map-details" role="tabpanel" aria-labelledby="tab-with-map-details-item-1">
        <div class="grid grid-cols-1 gap-6 md:grid-cols-2">
            <!-- LEFT -->
            <div class="flex flex-col">
                <div class="card w-full z-10 bg-white border border-gray-200 dark:bg-neutral-900 dark:border-neutral-700 rounded-lg">
                    <div class="card-body w-full h-full">
                        <div id="map" class="h-[50vh] w-full rounded-lg"></div>
                    </div>
                </div>
                <div class="mt-4 p-4 card w-full z-10 bg-white border border-gray-200 dark:bg-neutral-900 dark:border-neutral-700 rounded-lg">
                    <div class="grid grid-cols-2 gap-4">
                        <button type="button" id="drawMap" class="py-2.5 sm:py-3 px-4 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-transparent bg-blue-600 text-white hover:bg-blue-700 focus:outline-none focus:bg-blue-700 disabled:opacity-50 disabled:pointer-events-none">
                            <div class="flex flex-col text-start">
                                <p>Click to start drawing on the map</p>
                                <p><small>Click on the map to set the boundaries.</small></p>
                            </div>
                        </button>
                        <button type="button" id="deleteBoundaries" class="py-3 px-4 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-transparent bg-red-500 text-white hover:bg-red-600 focus:outline-hidden focus:bg-red-600 disabled:opacity-50 disabled:pointer-events-none">
                            <div class="flex flex-col text-start">
                                <p>Remove boundaries from map</p>
                                <p><small>Removes existing boundaries on the map.</small></p>
                            </div>
                        </button>
                    </div>
                    <p class="text-sm text-red-600 mt-2">
                        @Html.ValidationMessageFor(model => model.Area)
                    </p>
                </div>
            </div>
                
            <!-- RIGHT -->
            <form method="post" asp-controller="map" asp-action="submit" id="map_form">
                @Html.AntiForgeryToken()
                <div asp-validation-summary="ModelOnly" class="text-red-500 mb-4"></div>

                <input type="hidden" asp-for="Id" />
                <input type="hidden" asp-for="Area" />

                <div>
                    <div class="mb-6 border border-gray-200 dark:bg-neutral-900 dark:border-neutral-700 p-4 rounded-lg">
                        @Html.EditorFor(m => m.Name, new ViewDataDictionary(ViewData) {
                            { "Placeholder", "Enter Name..." },
                            { "Label", "Name" }
                        })
                    </div>

                    <div class="mt-1 p-4 relative z-10 bg-white border border-gray-200 rounded-xl sm:mt-4 dark:bg-neutral-900 dark:border-neutral-700">
                        @Html.EditorFor(m => m.ImageUrl, new ViewDataDictionary(ViewData) {
                            { "Label", "Image (URL)" },
                        })
                        <div class="flex justify-center">
                            <div id="previewImageLoader" class="animate-spin size-6 border-3 border-current border-t-transparent text-blue-600 rounded-full dark:text-blue-500 hidden" role="status" aria-label="loading">
                                <span class="sr-only">Loading...</span>
                            </div>

                            <img id="previewImage" class="mt-2 w-full rounded-lg hidden" alt="POI main image" />
                            <p id="imagePreviewError" class="text-sm text-yellow-800 mt-2 hidden">Image at URL does not exist.</p>
                        </div>
                    </div>

                    <div>
                        <div class="grid grid-cols-2 gap-4 mt-2">
                            @Html.EditorFor(m => m.TopLeft, new ViewDataDictionary(ViewData) {
                                { "Label", "Top left" },
                                { "Readonly", true },
                                { "Hidden", true }
                            })
                            @Html.EditorFor(m => m.TopRight, new ViewDataDictionary(ViewData) {
                                { "Label", "Top right" },
                                { "Readonly", true },
                                { "Hidden", true }
                            })
                        </div>
                        <div class="grid grid-cols-2 gap-4 mt-2">
                            @Html.EditorFor(m => m.BottomLeft, new ViewDataDictionary(ViewData) {
                                { "Label", "Bottom left" },
                                { "Readonly", true },
                                { "Hidden", true }
                            })
                            @Html.EditorFor(m => m.BottomRight, new ViewDataDictionary(ViewData) {
                                { "Label", "Bottom right" },
                                { "Readonly", true },
                                { "Hidden", true }
                            })
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <script src="~/js/preview-map-image.js" asp-append-version="true" type="module"></script>
    <script src="~/js/map/park-boundaries-maplibre.js" asp-append-version="true" type="module"></script>
        
    <div id="tab-with-map-background" class="hidden" role="tabpanel" aria-labelledby="tab-with-map-background-item">
        @await Html.PartialAsync("~/Views/Shared/Components/MapForm/_MapWarping.cshtml", Model)
    </div>
    
    <div class="mt-4">
        <div class="mt-2 py-4 relative z-10">
            <div class="flex justify-end gap-3 w-full">
                @if ((!string.IsNullOrEmpty(Model.Id) && Model.Id != Guid.Empty.ToString() && Model.Id != "00000000-0000-0000-0000-000000000000"))
                {
                    <a asp-controller="Map" asp-action="Index" class="py-3 px-4 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-transparent bg-gray-100 text-gray-800 hover:bg-gray-200 focus:outline-hidden focus:bg-gray-200 disabled:opacity-50 disabled:pointer-events-none dark:bg-white/10 dark:text-white dark:hover:bg-white/20 dark:hover:text-white dark:focus:bg-white/20 dark:focus:text-white">
                        Cancel
                    </a>
                }
                else
                {
                    <a class="py-3 px-4 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-transparent bg-gray-100 text-gray-800 hover:bg-gray-200 focus:outline-hidden focus:bg-gray-200 disabled:opacity-50 disabled:pointer-events-none dark:bg-white/10 dark:text-white dark:hover:bg-white/20 dark:hover:text-white dark:focus:bg-white/20 dark:focus:text-white" aria-haspopup="dialog" aria-expanded="false" aria-controls="@leaveChangesModalId" data-hs-overlay="#@leaveChangesModalId">
                        Cancel
                    </a>
                }

                <button type="button" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600" onclick="document.getElementById('map_form').requestSubmit();">
                    @((!string.IsNullOrEmpty(Model.Id) && Model.Id != Guid.Empty.ToString() && Model.Id != "00000000-0000-0000-0000-000000000000") ? "Update" : "Create")
                </button>
            </div>
        </div>
    </div>
}