@model LiveMapDashboard.Web.Models.Category.CategoryCrudFormViewModel

@{
    Layout = "~/Views/Shared/Layouts/_DefaultLayout.cshtml";
}


@section TopBarActions
{
    <div class="flex justify-between">
        @await Html.PartialAsync("Components/CategoryForm/_GoBack", Model)

        @if (Model.CategoryName != "" && Model.CategoryName is not null)
        {
            @await Html.PartialAsync("Components/CategoryForm/_Delete", Model)
        }
    </div>    
}

@section Content
{
    <div class="max-w-10xl px-4 pb-10 sm:px-6 lg:px-6 lg:pb-14 mx-auto">
        <form method="post" asp-controller="category" asp-action="submit">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="ModelOnly" class="text-red-500 mb-4"></div>

            <input type="hidden" name="@nameof(Model.CategoryName)" asp-for="CategoryName" />

            <div class="flex flex-col gap-6">
                <div class="mt-2 p-4 relative z-10 bg-white border border-gray-200 rounded-xl dark:bg-neutral-900 dark:border-neutral-700">

                    @Html.EditorFor(m => m.NewValue, new ViewDataDictionary(ViewData) {
                        { "value", Model.CategoryName },
                        { "Label", "Category name" }
                    })
                </div>
            </div>

            <div class="mt-2 py-4 relative z-10">
                <div class="flex justify-end gap-3 w-full">

                    @if (Model.CategoryName != "" && Model.CategoryName is not null)
                    {
                        <a asp-controller="Category" asp-action="Index" class="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600 text-center">
                            Cancel
                        </a>
                    }
                    else
                    {
                        <div class="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600 text-center" data-hs-overlay="#go-back-alert">
                            Cancel
                        </div>
                    }

                    <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 text-center">
                        Save
                    </button>
                </div>
            </div>
        </form>
    </div>
}

@if(Model.CategoryName != "" && Model.CategoryName is not null)
{
    var deleteModalModel = new DeleteModalViewModel
    {
        ModalId = $"delete-category-{Model.CategoryName.Replace(' ', '-').ToLower()}",
        ModalTitle = $"Delete Category: {Model.CategoryName}",
        WarningMessage = "This action is not reversible, so please continue with caution.",
        DangerMessage = Model.IsUsed == true
            ? "This category is in use by other points of interest. Removing it will update related points of interest to have the default category of 'empty'."
            : null,
        FormController = "Category",
        FormAction = "Delete",
        HiddenInputs = new Dictionary<string, string>
        {
            { "CategoryName", Model.CategoryName },
            { "NewValue", Model.CategoryName }
        }
    };  
    @await Html.PartialAsync("Components/CategoryForm/_DeleteModal", deleteModalModel)
}